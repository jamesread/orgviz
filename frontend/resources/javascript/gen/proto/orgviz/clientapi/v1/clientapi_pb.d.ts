// @generated by protoc-gen-es v2.5.0
// @generated from file orgviz/clientapi/v1/clientapi.proto (package clientapi, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file orgviz/clientapi/v1/clientapi.proto.
 */
export declare const file_orgviz_clientapi_v1_clientapi: GenFile;

/**
 * @generated from message clientapi.GetClientInitialSettingsRequest
 */
export declare type GetClientInitialSettingsRequest = Message<"clientapi.GetClientInitialSettingsRequest"> & {
};

/**
 * Describes the message clientapi.GetClientInitialSettingsRequest.
 * Use `create(GetClientInitialSettingsRequestSchema)` to create a new message.
 */
export declare const GetClientInitialSettingsRequestSchema: GenMessage<GetClientInitialSettingsRequest>;

/**
 * @generated from message clientapi.GetClientInitialSettingsResponse
 */
export declare type GetClientInitialSettingsResponse = Message<"clientapi.GetClientInitialSettingsResponse"> & {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * @generated from field: repeated clientapi.ChartInfo charts = 2;
   */
  charts: ChartInfo[];
};

/**
 * Describes the message clientapi.GetClientInitialSettingsResponse.
 * Use `create(GetClientInitialSettingsResponseSchema)` to create a new message.
 */
export declare const GetClientInitialSettingsResponseSchema: GenMessage<GetClientInitialSettingsResponse>;

/**
 * @generated from message clientapi.GetChartRequest
 */
export declare type GetChartRequest = Message<"clientapi.GetChartRequest"> & {
  /**
   * @generated from field: string chartId = 1;
   */
  chartId: string;
};

/**
 * Describes the message clientapi.GetChartRequest.
 * Use `create(GetChartRequestSchema)` to create a new message.
 */
export declare const GetChartRequestSchema: GenMessage<GetChartRequest>;

/**
 * @generated from message clientapi.GetChartResponse
 */
export declare type GetChartResponse = Message<"clientapi.GetChartResponse"> & {
  /**
   * @generated from field: string chartId = 1;
   */
  chartId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: repeated clientapi.Person people = 3;
   */
  people: Person[];
};

/**
 * Describes the message clientapi.GetChartResponse.
 * Use `create(GetChartResponseSchema)` to create a new message.
 */
export declare const GetChartResponseSchema: GenMessage<GetChartResponse>;

/**
 * @generated from message clientapi.Person
 */
export declare type Person = Message<"clientapi.Person"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: int32 parentId = 2;
   */
  parentId: number;

  /**
   * @generated from field: string full_name = 3;
   */
  fullName: string;

  /**
   * @generated from field: string job_title = 4;
   */
  jobTitle: string;

  /**
   * @generated from field: string avatar_url = 5;
   */
  avatarUrl: string;
};

/**
 * Describes the message clientapi.Person.
 * Use `create(PersonSchema)` to create a new message.
 */
export declare const PersonSchema: GenMessage<Person>;

/**
 * @generated from message clientapi.ChartInfo
 */
export declare type ChartInfo = Message<"clientapi.ChartInfo"> & {
  /**
   * @generated from field: string chartId = 1;
   */
  chartId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;
};

/**
 * Describes the message clientapi.ChartInfo.
 * Use `create(ChartInfoSchema)` to create a new message.
 */
export declare const ChartInfoSchema: GenMessage<ChartInfo>;

/**
 * @generated from service clientapi.ClientToFrontend
 */
export declare const ClientToFrontend: GenService<{
  /**
   * @generated from rpc clientapi.ClientToFrontend.getClientInitialSettings
   */
  getClientInitialSettings: {
    methodKind: "unary";
    input: typeof GetClientInitialSettingsRequestSchema;
    output: typeof GetClientInitialSettingsResponseSchema;
  },
  /**
   * @generated from rpc clientapi.ClientToFrontend.getChart
   */
  getChart: {
    methodKind: "unary";
    input: typeof GetChartRequestSchema;
    output: typeof GetChartResponseSchema;
  },
}>;

